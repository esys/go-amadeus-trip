// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "amadeus-trip-parser/internal/domain/model"

	mock "github.com/stretchr/testify/mock"
)

// TripRepository is an autogenerated mock type for the TripRepository type
type TripRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: trip
func (_m *TripRepository) Create(trip *model.Trip) error {
	ret := _m.Called(trip)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Trip) error); ok {
		r0 = rf(trip)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *TripRepository) GetAll() ([]model.Trip, error) {
	ret := _m.Called()

	var r0 []model.Trip
	if rf, ok := ret.Get(0).(func() []model.Trip); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Trip)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOne provides a mock function with given fields: query
func (_m *TripRepository) GetOne(query model.Trip) (model.Trip, error) {
	ret := _m.Called(query)

	var r0 model.Trip
	if rf, ok := ret.Get(0).(func(model.Trip) model.Trip); ok {
		r0 = rf(query)
	} else {
		r0 = ret.Get(0).(model.Trip)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Trip) error); ok {
		r1 = rf(query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
